{{ 'component-slideshow.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign social_icons = true
  if settings.social_facebook_link == blank and settings.social_instagram_link == blank and settings.social_youtube_link == blank and settings.social_tiktok_link == blank and settings.social_twitter_link == blank and settings.social_pinterest_link == blank and settings.social_snapchat_link == blank and settings.social_tumblr_link == blank and settings.social_vimeo_link == blank
    assign social_icons = false
  endif
  if section.settings.enable_country_selector or section.settings.enable_language_selector
    assign language_country_selector = true
  endif
  if section.blocks.size > 0
    assign announcement_bar = true
  endif
-%}

{% if social_icons %}
  {{ 'component-list-social.css' | asset_url | stylesheet_tag }}
{% endif %}

<div
  class="utility-bar color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator and section.blocks.size > 0 %} utility-bar--bottom-border{% elsif section.settings.show_line_separator and section.settings.show_social and social_icons%} utility-bar--bottom-border-social-only{% endif %}{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header-localization{% endif %}"
>
  <div class="page-width utility-bar__grid{% if announcement_bar and language_country_selector or section.settings.show_social and social_icons %} utility-bar__grid--3-col{% elsif language_country_selector or section.settings.show_social and social_icons %} utility-bar__grid--2-col{% endif %}">
    {%- if section.settings.show_social and social_icons -%}
      {%- render 'social-icons' -%}
    {%- endif -%}
    {%- if section.blocks.size == 1 -%}
      <div class="announcement-bar{% if section.settings.show_social %} announcement-bar--one-announcement{% endif %}{% if section.settings.countdown_position == 'beside' %} announcement-bar--flex{% endif %}"
        role="region"
        aria-label="{{ 'sections.header.announcement' | t }}"
        {{ section.blocks.first.shopify_attributes }}
      >
        {% if section.settings.show_countdown %}
            {% assign datetime_metaobject = shop.metaobjects.countdown_date_time[section.settings.metaobject_handle] %}
            {% if datetime_metaobject.datetime != blank %}
              {% assign end_date = datetime_metaobject.datetime | date: '%s' | plus: 0 %}
              {% assign current_date = 'now' | date: '%s' | plus: 0 %}
              {% assign time_difference = end_date | minus: current_date %}
            {% endif %}
        {% endif %}
        <div class="announcement-bar__content">
            {%- if section.blocks.first.settings.text != blank -%}
                {%- if section.blocks.first.settings.link != blank -%}
                <a href="{{ section.blocks.first.settings.link }}" class="announcement-bar__link link link--text focus-inset animate-arrow">
                {%- endif -%}
                <p class="announcement-bar__message h5">
                <span>
                    {% if section.settings.show_countdown and time_difference <= 0 %}
                        {{ section.settings.completed_timer_text | escape }}
                    {% else %}
                        {{ section.blocks.first.settings.text | escape }}
                    {% endif %}
                </span>
                {%- if section.blocks.first.settings.link != blank -%}
                    {{- 'icon-arrow.svg' | inline_asset_content -}}
                {%- endif -%}
                </p>
                {%- if section.blocks.first.settings.link != blank -%}
                </a>
                {%- endif -%}
            {%- endif -%}
        </div>
        {% if section.settings.show_countdown %}
            {% if time_difference > 0 %}
                {% assign days = time_difference | divided_by: 86400 %}
                {% assign hours = time_difference | modulo: 86400 | divided_by: 3600 %}
                {% assign minutes = time_difference | modulo: 3600 | divided_by: 60 %}
                {% assign seconds = time_difference | modulo: 60 %}
                <div class="announcement-bar__countdown" data-end-date="{{ datetime_metaobject.datetime | date: '%Y-%m-%d %H:%M:%S' }}" data-show-colons="{{ section.settings.show_colons }}">
                    <div class="countdown-item">
                        <span class="countdown-number countdown-days">{{ days | floor | default: '00' | prepend: '0' | slice: -2, 2 }}</span>
                        <span class="countdown-label">{{ section.settings.days_label }}</span>
                    </div>
                    {% if section.settings.show_colons %}
                    <div class="countdown-separator-container">
                        <span class="countdown-separator">:</span>
                        <span class="countdown-separator-placeholder"></span>
                    </div>
                    {% endif %}
                    <div class="countdown-item">
                        <span class="countdown-number countdown-hours">{{ hours | floor | default: '00' | prepend: '0' | slice: -2, 2 }}</span>
                        <span class="countdown-label">{{ section.settings.hours_label }}</span>
                    </div>
                    {% if section.settings.show_colons %}
                    <div class="countdown-separator-container">
                        <span class="countdown-separator">:</span>
                        <span class="countdown-separator-placeholder"></span>
                    </div>
                    {% endif %}
                    <div class="countdown-item">
                        <span class="countdown-number countdown-minutes">{{ minutes | floor | default: '00' | prepend: '0' | slice: -2, 2 }}</span>
                        <span class="countdown-label">{{ section.settings.minutes_label }}</span>
                    </div>
                    {% if section.settings.show_colons %}
                    <div class="countdown-separator-container">
                        <span class="countdown-separator">:</span>
                        <span class="countdown-separator-placeholder"></span>
                    </div>
                    {% endif %}
                    <div class="countdown-item">
                        <span class="countdown-number countdown-seconds">{{ seconds | floor | default: '00' | prepend: '0' | slice: -2, 2 }}</span>
                        <span class="countdown-label">{{ section.settings.seconds_label }}</span>
                    </div>
                </div>
            {% endif %}
        {% endif %}
        
      </div>
    {%- elsif section.blocks.size > 1 -%}
      <slideshow-component
        class="announcement-bar"
        role="region"
        aria-roledescription="{{ 'sections.announcements.carousel' | t }}"
        aria-label="{{ 'sections.announcements.announcement_bar' | t }}"
      >
        <div class="announcement-bar-slider slider-buttons">
          <button
            type="button"
            class="slider-button slider-button--prev"
            name="previous"
            aria-label="{{ 'sections.announcements.previous_announcement' | t }}"
            aria-controls="Slider-{{ section.id }}"
          >
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </button>
          <div
            class="grid grid--1-col slider slider--everywhere"
            id="Slider-{{ section.id }}"
            aria-live="polite"
            aria-atomic="true"
            data-autoplay="{{ section.settings.auto_rotate }}"
            data-speed="{{ section.settings.change_slides_speed }}"
          >
            {%- for block in section.blocks -%}
              <div
                class="slideshow__slide slider__slide grid__item grid--1-col"
                id="Slide-{{ section.id }}-{{ forloop.index }}"
                {{ block.shopify_attributes }}
                role="group"
                aria-roledescription="{{ 'sections.announcements.announcement' | t }}"
                aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                tabindex="-1"
              >
                <div
                  class="announcement-bar__announcement"
                  role="region"
                  aria-label="{{ 'sections.header.announcement' | t }}"
                >
                  {%- if block.settings.text != blank -%}
                    {%- if block.settings.link != blank -%}
                      <a
                        href="{{ block.settings.link }}"
                        class="announcement-bar__link link link--text focus-inset animate-arrow"
                      >
                    {%- endif -%}
                    <p class="announcement-bar__message h5">
                      <span>{{ block.settings.text | escape }}</span>
                      {%- if block.settings.link != blank -%}
                        {{- 'icon-arrow.svg' | inline_asset_content -}}
                      {%- endif -%}
                    </p>
                    {%- if block.settings.link != blank -%}
                      </a>
                    {%- endif -%}
                  {%- endif -%}
                </div>
              </div>
            {%- endfor -%}
          </div>
          <button
            type="button"
            class="slider-button slider-button--next"
            name="next"
            aria-label="{{ 'sections.announcements.next_announcement' | t }}"
            aria-controls="Slider-{{ section.id }}"
          >
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </button>
        </div>
      </slideshow-component>
      {%- if request.design_mode -%}
        <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
        <style>
          /* theme editor power preview fix */
          .announcement-bar-slider .slider__slide[aria-hidden='true'] {
            visibility: hidden;
          }
        </style>
      {%- endif -%}
    {%- endif -%}
    <div class="localization-wrapper">
      {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
        <localization-form class="small-hide medium-hide">
          {%- form 'localization', id: 'AnnouncementCountryForm', class: 'localization-form' -%}
            <div>
              <h2 class="visually-hidden" id="AnnouncementCountryLabel">{{ 'localization.country_label' | t }}</h2>
              {%- render 'country-localization', localPosition: 'AnnouncementCountry' -%}
            </div>
          {%- endform -%}
        </localization-form>
      {% endif %}

      {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
        <localization-form class="small-hide medium-hide">
          {%- form 'localization', id: 'AnnouncementLanguageForm', class: 'localization-form' -%}
            <div>
              <h2 class="visually-hidden" id="AnnouncementLanguageLabel">{{ 'localization.language_label' | t }}</h2>
              {%- render 'language-localization', localPosition: 'AnnouncementLanguage' -%}
            </div>
          {%- endform -%}
        </localization-form>
      {%- endif -%}
    </div>
  </div>
</div>

{% if section.settings.show_countdown and section.blocks.size == 1 %}
    <style>
        .announcement-bar {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
    
        .announcement-bar--flex {
            flex-direction: row;
            justify-content: center;
            align-items: center;
        }
    
        .announcement-bar__content {
            text-align: center;
        }
    
        .announcement-bar__countdown {
            display: flex;
            justify-content: center;
            align-items: flex-start;
            {% if section.settings.countdown_position == 'beside' %}
                flex: 0 0 auto;
            {% else %}
                width: 100%;
            {% endif %}
        }
    
        .countdown-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 0 5px;
        }
    
        .countdown-number {
            font-size: {{ section.settings.countdown_number_font_size }}em;
            font-weight: bold;
            line-height: 1;
        }
    
        .countdown-label {
            font-size: {{ section.settings.countdown_label_font_size }}em;
            {% if section.settings.countdown_label_set_uppercase %}text-transform: uppercase;{% endif %}
        }
    
        .countdown-separator-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 0 2px;
        }
    
        .countdown-separator {
            font-size: {{ section.settings.countdown_number_font_size }}em;
            font-weight: bold;
            line-height: 1;
        }
    
        .countdown-separator-placeholder {
            font-size: {{ section.settings.countdown_label_font_size }}em;
            visibility: hidden;
        }
    
        {% unless section.settings.show_colons %}
            .countdown-separator-container {
                display: none;
            }
        {% endunless %}
    
        .announcement-bar__message {
            font-size: {{ section.settings.announcement_font_size }}em;
            min-height: 3.0rem;
            margin: 0;
        }
    
        {% if section.settings.countdown_position == 'below' %}  
            .announcement-bar__message {
                padding: 0.5rem 0;
            }
        {% elsif section.settings.countdown_position == 'beside' %}
            .announcement-bar__content {
                flex: 0 1 auto;
                padding-right: 20px;
            }
    
            .announcement-bar__message {
                min-height: 0;
            }
    
            .announcement-bar__countdown {
                margin: 5px 0;
            }
        {% endif %}
    </style>
  
    <script>
        class CountdownTimer {
            constructor(element, endDate, completedText) {
                this.element = element;
                this.endDate = new Date(endDate).getTime();
                this.completedText = completedText;
                this.daysElement = element.querySelector('.countdown-days');
                this.hoursElement = element.querySelector('.countdown-hours');
                this.minutesElement = element.querySelector('.countdown-minutes');
                this.secondsElement = element.querySelector('.countdown-seconds');
                this.messageElement = document.querySelector('.announcement-bar__message');
                this.showColons = element.dataset.showColons === 'true';
            }
        
            start() {
                if (this.endDate <= new Date().getTime()) {
                  this.complete();
                } else {
                  this.update();
                  this.interval = setInterval(() => this.update(), 1000);
                }
              }
        
            update() {
                const now = new Date().getTime();
                const distance = this.endDate - now;
        
                if (distance < 0) {
                    this.complete();
                    return;
                }
        
                const days = Math.floor(distance / (1000 * 60 * 60 * 24));
                const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                const seconds = Math.floor((distance % (1000 * 60)) / 1000);
        
                if (this.daysElement) this.daysElement.textContent = days.toString().padStart(2, '0');
                if (this.hoursElement) this.hoursElement.textContent = hours.toString().padStart(2, '0');
                if (this.minutesElement) this.minutesElement.textContent = minutes.toString().padStart(2, '0');
                if (this.secondsElement) this.secondsElement.textContent = seconds.toString().padStart(2, '0');
            }

            complete() {
                clearInterval(this.interval);
                this.element.style.display = 'none';
                if (this.messageElement) {
                  this.messageElement.textContent = this.completedText;
                }
              }
        }
        
        document.addEventListener('DOMContentLoaded', () => {
            const countdownElement = document.querySelector('.announcement-bar__countdown');
            if (countdownElement) {
                const endDate = countdownElement.dataset.endDate;
                const completedText = {{ section.settings.completed_timer_text | json }};
                const countdown = new CountdownTimer(countdownElement, endDate, completedText);
                countdown.start();
            }
        });
    </script>
{% endif %}

{% if section.settings.sticky_bar %}
  <style>
    .announcement-bar-section {
      position: sticky;
      top: 0;
    }
  </style>
{% endif %}

{% schema %}
{
  "name": "Announcement Countdown",
  "max_blocks": 12,
  "class": "announcement-bar-section",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "checkbox",
      "id": "auto_rotate",
      "label": "t:sections.announcement-bar.settings.auto_rotate.label",
      "default": false
    },
    {
      "type": "range",
      "id": "change_slides_speed",
      "min": 3,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "t:sections.announcement-bar.settings.change_slides_speed.label",
      "default": 5
    },    
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-4"
    },  
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.heading_utilities.content"
    },
    {
      "type": "paragraph",
         "content": "t:sections.announcement-bar.settings.paragraph.content"
    },             
    {
      "type": "checkbox",
      "id": "show_social",
      "default": false,
      "label": "t:sections.announcement-bar.settings.show_social.label",
      "info": "t:sections.announcement-bar.settings.show_social.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "t:sections.announcement-bar.settings.enable_country_selector.label",
      "info": "t:sections.announcement-bar.settings.enable_country_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "t:sections.announcement-bar.settings.enable_language_selector.label",
      "info": "t:sections.announcement-bar.settings.enable_language_selector.info"
    },
    {
      "type": "header",
      "content": "Sticky Announcement Bar"
    },
    {
      "type": "checkbox",
      "id": "sticky_bar",
      "label": "Enable sticky announcement bar",
      "default": false
    },
    {
      "type": "header",
      "content": "Countdown Timer",
      "info": "Countdown Timer settings only activate with a single announcement block"
    },
    {
      "type": "checkbox",
      "id": "show_countdown",
      "label": "Show countdown timer",
      "default": false
    },
    {
      "type": "text",
      "id": "metaobject_handle",
      "label": "Countdown Metaobject Handle",
      "info": "Enter the handle of the metaobject containing the countdown date and time"
    },
    {
      "type": "text",
      "id": "completed_timer_text",
      "label": "Completed Timer Text",
      "default": "Offer has ended",
      "info": "Message to display when the countdown timer reaches zero"
    },
    {
      "type": "checkbox",
      "id": "show_colons",
      "label": "Show colons between timer numbers",
      "default": true
    },
    {
      "type": "select",
      "id": "countdown_position",
      "label": "Countdown Timer Position",
      "options": [
        {
          "value": "below",
          "label": "Below Announcement"
        },
        {
          "value": "beside",
          "label": "Beside Announcement"
        }
      ],
      "default": "below"
    },
    {
        "type": "range",
        "id": "announcement_font_size",
        "min": 0.5,
        "max": 2.0,
        "step": 0.1,
        "unit": "em",
        "label": "Announcement font size",
        "default": 0.8
      },
      {
        "type": "range",
        "id": "countdown_number_font_size",
        "min": 0.5,
        "max": 2.0,
        "step": 0.1,
        "unit": "em",
        "label": "Countdown number font size",
        "default": 1.4
      },
      {
        "type": "range",
        "id": "countdown_label_font_size",
        "min": 0.5,
        "max": 2.0,
        "step": 0.1,
        "unit": "em",
        "label": "Countdown label font size",
        "default": 0.8
      },
      {
        "type": "checkbox",
        "id": "countdown_label_set_uppercase",
        "label": "Set countdown labels as uppercase",
        "default": true
      },
      {
        "type": "text",
        "id": "days_label",
        "label": "Countdown Days Label",
        "default": "Days"
      },
      {
        "type": "text",
        "id": "hours_label",
        "label": "Countdown Hours Label",
        "default": "Hrs"
      },
      {
        "type": "text",
        "id": "minutes_label",
        "label": "Countdown Minutes Label",
        "default": "Mins"
      },
      {
        "type": "text",
        "id": "seconds_label",
        "label": "Countdown Seconds Label",
        "default": "Secs"
      }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "t:sections.announcement-bar.blocks.announcement.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "t:sections.announcement-bar.blocks.announcement.settings.text.default",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Announcement Countdown",
      "blocks": [
        {
          "type": "announcement"
        }
      ]
    }
  ]
}
{% endschema %}